[{"/home/jack/dev/matula/chipper/src/index.tsx":"1","/home/jack/dev/matula/chipper/src/App.tsx":"2","/home/jack/dev/matula/chipper/src/example/Main.tsx":"3","/home/jack/dev/matula/chipper/src/example/Two.tsx":"4","/home/jack/dev/matula/chipper/src/example/One.tsx":"5","/home/jack/dev/matula/chipper/src/lib/index.ts":"6","/home/jack/dev/matula/chipper/src/example/Counter.ts":"7","/home/jack/dev/matula/chipper/src/lib/utils.ts":"8"},{"size":178,"mtime":1611058519124,"results":"9","hashOfConfig":"10"},{"size":175,"mtime":1611058519124,"results":"11","hashOfConfig":"10"},{"size":550,"mtime":1611081973410,"results":"12","hashOfConfig":"10"},{"size":1227,"mtime":1611081993863,"results":"13","hashOfConfig":"10"},{"size":839,"mtime":1611081986851,"results":"14","hashOfConfig":"10"},{"size":2664,"mtime":1611081910904,"results":"15","hashOfConfig":"10"},{"size":758,"mtime":1611058519124,"results":"16","hashOfConfig":"10"},{"size":2257,"mtime":1611058519124,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jomuy0",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jack/dev/matula/chipper/src/index.tsx",[],"/home/jack/dev/matula/chipper/src/App.tsx",[],"/home/jack/dev/matula/chipper/src/example/Main.tsx",[],"/home/jack/dev/matula/chipper/src/example/Two.tsx",[],"/home/jack/dev/matula/chipper/src/example/One.tsx",[],"/home/jack/dev/matula/chipper/src/lib/index.ts",["34"],"/home/jack/dev/matula/chipper/src/example/Counter.ts",["35"],"/home/jack/dev/matula/chipper/src/lib/utils.ts",["36"],{"ruleId":null,"fatal":true,"severity":2,"message":"37","line":28,"column":47},{"ruleId":null,"fatal":true,"severity":2,"message":"38","line":4,"column":10},{"ruleId":null,"fatal":true,"severity":2,"message":"39","line":19,"column":55},"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 26 | \u001b[39m  queryQueue\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m \u001b[33m=\u001b[39m \u001b[33mTS\u001b[39m\u001b[33m.\u001b[39m\u001b[33mIData\u001b[39m\u001b[33m>\u001b[39m(key\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m data\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m) {\u001b[0m\n\u001b[0m \u001b[90m 27 | \u001b[39m    \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mchips\u001b[33m.\u001b[39mhas(key))\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 | \u001b[39m      \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mchips\u001b[33m.\u001b[39mset(key\u001b[33m,\u001b[39m \u001b[33mUtils\u001b[39m\u001b[33m.\u001b[39mnewChip(data) as \u001b[33mTS\u001b[39m\u001b[33m.\u001b[39m\u001b[33mIChip\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 | \u001b[39m    \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 30 | \u001b[39m      get\u001b[33m:\u001b[39m (cKey\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mchips\u001b[33m.\u001b[39mget(cKey \u001b[33m||\u001b[39m key) as \u001b[33mTS\u001b[39m\u001b[33m.\u001b[39m\u001b[33mIChip\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m      cut\u001b[33m:\u001b[39m (cKey\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mchips\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(cKey \u001b[33m||\u001b[39m key)\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mclass\u001b[39m \u001b[33mCounter\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 | \u001b[39m  public data\u001b[33m:\u001b[39m { [name\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m number } \u001b[33m=\u001b[39m {}\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m  public count(label\u001b[33m:\u001b[39m string \u001b[33m=\u001b[39m \u001b[32m\"default\"\u001b[39m)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m    \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m(label \u001b[36min\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdata)) {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 17 | \u001b[39m  let updated\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m  \u001b[36mconst\u001b[39m isFunction \u001b[33m=\u001b[39m \u001b[36mtypeof\u001b[39m update \u001b[33m===\u001b[39m \u001b[32m\"function\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m  \u001b[36mif\u001b[39m (isFunction) updated \u001b[33m=\u001b[39m produce(chop\u001b[33m.\u001b[39mdata\u001b[33m,\u001b[39m update as \u001b[33mTS\u001b[39m\u001b[33m.\u001b[39m\u001b[33mIDraft\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m  \u001b[36melse\u001b[39m updated \u001b[33m=\u001b[39m produce(chop\u001b[33m.\u001b[39mdata\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m update)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m  \u001b[36mreturn\u001b[39m { \u001b[33m...\u001b[39mchop\u001b[33m,\u001b[39m data\u001b[33m:\u001b[39m updated\u001b[33m,\u001b[39m key } as \u001b[33mTS\u001b[39m\u001b[33m.\u001b[39m\u001b[33mIChip\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m}\u001b[0m"]